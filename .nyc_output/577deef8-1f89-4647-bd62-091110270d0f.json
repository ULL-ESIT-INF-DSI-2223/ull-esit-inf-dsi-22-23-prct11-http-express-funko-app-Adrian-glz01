{"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/request.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/request.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":126}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":23},"end":{"line":25,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":24,"column":5}},"6":{"start":{"line":8,"column":26},"end":{"line":8,"column":80}},"7":{"start":{"line":9,"column":25},"end":{"line":14,"column":9}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":38}},"9":{"start":{"line":18,"column":23},"end":{"line":22,"column":9}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":36}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":40}},"12":{"start":{"line":27,"column":23},"end":{"line":69,"column":1}},"13":{"start":{"line":28,"column":4},"end":{"line":68,"column":5}},"14":{"start":{"line":29,"column":8},"end":{"line":37,"column":9}},"15":{"start":{"line":30,"column":27},"end":{"line":34,"column":13}},"16":{"start":{"line":35,"column":12},"end":{"line":35,"column":40}},"17":{"start":{"line":36,"column":12},"end":{"line":36,"column":19}},"18":{"start":{"line":38,"column":20},"end":{"line":38,"column":74}},"19":{"start":{"line":42,"column":8},"end":{"line":59,"column":9}},"20":{"start":{"line":43,"column":29},"end":{"line":43,"column":98}},"21":{"start":{"line":44,"column":29},"end":{"line":49,"column":13}},"22":{"start":{"line":50,"column":12},"end":{"line":50,"column":42}},"23":{"start":{"line":53,"column":27},"end":{"line":57,"column":13}},"24":{"start":{"line":58,"column":12},"end":{"line":58,"column":40}},"25":{"start":{"line":62,"column":23},"end":{"line":66,"column":9}},"26":{"start":{"line":67,"column":8},"end":{"line":67,"column":36}},"27":{"start":{"line":70,"column":0},"end":{"line":70,"column":40}},"28":{"start":{"line":71,"column":20},"end":{"line":109,"column":1}},"29":{"start":{"line":72,"column":16},"end":{"line":72,"column":70}},"30":{"start":{"line":73,"column":4},"end":{"line":108,"column":5}},"31":{"start":{"line":74,"column":8},"end":{"line":82,"column":9}},"32":{"start":{"line":75,"column":27},"end":{"line":79,"column":13}},"33":{"start":{"line":80,"column":12},"end":{"line":80,"column":40}},"34":{"start":{"line":81,"column":12},"end":{"line":81,"column":19}},"35":{"start":{"line":83,"column":8},"end":{"line":99,"column":9}},"36":{"start":{"line":84,"column":27},"end":{"line":88,"column":13}},"37":{"start":{"line":89,"column":12},"end":{"line":89,"column":40}},"38":{"start":{"line":92,"column":12},"end":{"line":92,"column":70}},"39":{"start":{"line":93,"column":29},"end":{"line":97,"column":13}},"40":{"start":{"line":98,"column":12},"end":{"line":98,"column":42}},"41":{"start":{"line":102,"column":23},"end":{"line":106,"column":9}},"42":{"start":{"line":107,"column":8},"end":{"line":107,"column":36}},"43":{"start":{"line":110,"column":0},"end":{"line":110,"column":34}},"44":{"start":{"line":111,"column":22},"end":{"line":148,"column":1}},"45":{"start":{"line":112,"column":4},"end":{"line":147,"column":5}},"46":{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},"47":{"start":{"line":114,"column":27},"end":{"line":118,"column":13}},"48":{"start":{"line":119,"column":12},"end":{"line":119,"column":40}},"49":{"start":{"line":120,"column":12},"end":{"line":120,"column":19}},"50":{"start":{"line":123,"column":8},"end":{"line":138,"column":9}},"51":{"start":{"line":124,"column":29},"end":{"line":128,"column":13}},"52":{"start":{"line":129,"column":12},"end":{"line":129,"column":42}},"53":{"start":{"line":132,"column":27},"end":{"line":136,"column":13}},"54":{"start":{"line":137,"column":12},"end":{"line":137,"column":40}},"55":{"start":{"line":141,"column":23},"end":{"line":145,"column":9}},"56":{"start":{"line":146,"column":8},"end":{"line":146,"column":36}},"57":{"start":{"line":149,"column":0},"end":{"line":149,"column":38}},"58":{"start":{"line":150,"column":21},"end":{"line":191,"column":1}},"59":{"start":{"line":151,"column":4},"end":{"line":190,"column":5}},"60":{"start":{"line":152,"column":8},"end":{"line":160,"column":9}},"61":{"start":{"line":153,"column":27},"end":{"line":157,"column":13}},"62":{"start":{"line":158,"column":12},"end":{"line":158,"column":40}},"63":{"start":{"line":159,"column":12},"end":{"line":159,"column":19}},"64":{"start":{"line":161,"column":20},"end":{"line":161,"column":74}},"65":{"start":{"line":164,"column":8},"end":{"line":181,"column":9}},"66":{"start":{"line":165,"column":12},"end":{"line":165,"column":80}},"67":{"start":{"line":166,"column":12},"end":{"line":166,"column":70}},"68":{"start":{"line":167,"column":29},"end":{"line":171,"column":13}},"69":{"start":{"line":172,"column":12},"end":{"line":172,"column":42}},"70":{"start":{"line":175,"column":27},"end":{"line":179,"column":13}},"71":{"start":{"line":180,"column":12},"end":{"line":180,"column":40}},"72":{"start":{"line":184,"column":23},"end":{"line":188,"column":9}},"73":{"start":{"line":189,"column":8},"end":{"line":189,"column":36}},"74":{"start":{"line":192,"column":0},"end":{"line":192,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":23},"end":{"line":6,"column":24}},"loc":{"start":{"line":6,"column":44},"end":{"line":25,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":23},"end":{"line":27,"column":24}},"loc":{"start":{"line":27,"column":44},"end":{"line":69,"column":1}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":71,"column":20},"end":{"line":71,"column":21}},"loc":{"start":{"line":71,"column":41},"end":{"line":109,"column":1}},"line":71},"3":{"name":"(anonymous_3)","decl":{"start":{"line":111,"column":22},"end":{"line":111,"column":23}},"loc":{"start":{"line":111,"column":43},"end":{"line":148,"column":1}},"line":111},"4":{"name":"(anonymous_4)","decl":{"start":{"line":150,"column":21},"end":{"line":150,"column":22}},"loc":{"start":{"line":150,"column":42},"end":{"line":191,"column":1}},"line":150}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":24,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":24,"column":5}},{"start":{"line":7,"column":4},"end":{"line":24,"column":5}}],"line":7},"1":{"loc":{"start":{"line":28,"column":4},"end":{"line":68,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":68,"column":5}},{"start":{"line":28,"column":4},"end":{"line":68,"column":5}}],"line":28},"2":{"loc":{"start":{"line":29,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":37,"column":9}},{"start":{"line":29,"column":8},"end":{"line":37,"column":9}}],"line":29},"3":{"loc":{"start":{"line":42,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":59,"column":9}},{"start":{"line":42,"column":8},"end":{"line":59,"column":9}}],"line":42},"4":{"loc":{"start":{"line":73,"column":4},"end":{"line":108,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":108,"column":5}},{"start":{"line":73,"column":4},"end":{"line":108,"column":5}}],"line":73},"5":{"loc":{"start":{"line":74,"column":8},"end":{"line":82,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":82,"column":9}},{"start":{"line":74,"column":8},"end":{"line":82,"column":9}}],"line":74},"6":{"loc":{"start":{"line":74,"column":12},"end":{"line":74,"column":214}},"type":"binary-expr","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":22}},{"start":{"line":74,"column":26},"end":{"line":74,"column":38}},{"start":{"line":74,"column":42},"end":{"line":74,"column":61}},{"start":{"line":74,"column":65},"end":{"line":74,"column":77}},{"start":{"line":74,"column":81},"end":{"line":74,"column":111}},{"start":{"line":74,"column":115},"end":{"line":74,"column":132}},{"start":{"line":74,"column":136},"end":{"line":74,"column":153}},{"start":{"line":74,"column":157},"end":{"line":74,"column":181}},{"start":{"line":74,"column":185},"end":{"line":74,"column":198}},{"start":{"line":74,"column":202},"end":{"line":74,"column":214}}],"line":74},"7":{"loc":{"start":{"line":83,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":99,"column":9}},{"start":{"line":83,"column":8},"end":{"line":99,"column":9}}],"line":83},"8":{"loc":{"start":{"line":112,"column":4},"end":{"line":147,"column":5}},"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":147,"column":5}},{"start":{"line":112,"column":4},"end":{"line":147,"column":5}}],"line":112},"9":{"loc":{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":121,"column":9}},{"start":{"line":113,"column":8},"end":{"line":121,"column":9}}],"line":113},"10":{"loc":{"start":{"line":123,"column":8},"end":{"line":138,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":138,"column":9}},{"start":{"line":123,"column":8},"end":{"line":138,"column":9}}],"line":123},"11":{"loc":{"start":{"line":151,"column":4},"end":{"line":190,"column":5}},"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":190,"column":5}},{"start":{"line":151,"column":4},"end":{"line":190,"column":5}}],"line":151},"12":{"loc":{"start":{"line":152,"column":8},"end":{"line":160,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":160,"column":9}},{"start":{"line":152,"column":8},"end":{"line":160,"column":9}}],"line":152},"13":{"loc":{"start":{"line":164,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":181,"column":9}},{"start":{"line":164,"column":8},"end":{"line":181,"column":9}}],"line":164}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":1,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":2,"46":1,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":2,"60":1,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":0,"68":0,"69":0,"70":1,"71":1,"72":1,"73":1,"74":1},"f":{"0":2,"1":2,"2":2,"3":2,"4":2},"b":{"0":[1,1],"1":[1,1],"2":[0,1],"3":[0,1],"4":[2,0],"5":[2,0],"6":[2,2,1,1,1,1,0,0,0,0],"7":[0,0],"8":[1,1],"9":[0,1],"10":[0,1],"11":[1,1],"12":[0,1],"13":[0,1]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/request.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/request.ts"],"names":[],"mappings":"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","sourcesContent":["import {Funko} from './funkoInterface'\nimport {ResponseType} from './types'\nimport {listFunko, findFunkoByID, createJsonFunkoFile, removeFunko} from './utilities'\nimport {checkUserDirSync, getIds, checkIds} from './utilities2'\n\nexport const getListRequest = (funko: Funko, callback: (\n  err:ResponseType | undefined, data: ResponseType | undefined) => void ) => {\n    if (checkUserDirSync(funko._owner, './database')) {\n      const funkoPops: Funko[] = listFunko('./database',funko._owner);\n      const response: ResponseType = {\n        type: 'list',\n        success: true,\n        message: 'Lista de Funkos',\n        funkoPops: funkoPops,\n      };\n      callback(undefined, response);\n    } else {\n      const error_: ResponseType = {\n        type: 'error',\n        success: false,\n        message: 'El usuario no existe',\n      };\n      callback(error_, undefined);\n    }\n  };\n\nexport const getReadRequest = (funko: Funko, callback: (\n  err:ResponseType | undefined, data: ResponseType | undefined) => void ) => {\n    if (checkUserDirSync(funko._owner, './database')) {\n      if(!funko._id) {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'No se ha especificado el id',\n        };\n        callback(error_, undefined);\n        return;\n      } \n      const ids = getIds(`./database/${funko._owner}`);\n      // console.log(ids)\n      // console.log(funko._id)\n      // console.log(checkIds(ids, funko._id))\n      if(checkIds(ids, funko._id)) {\n        const funkoPop = findFunkoByID('./database', funko._owner, funko._id);\n        const response: ResponseType = {\n          type: 'read',\n          success: true,\n          message: 'Funko encontrado',\n          funko: funkoPop,\n        };\n        callback(undefined, response);\n      } else {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'El id no existe',\n        };\n        callback(error_, undefined);\n      }\n    } else {\n      const error_: ResponseType = {\n        type: 'error',\n        success: false,\n        message: 'El usuario no existe',\n      };\n      callback(error_, undefined);\n    }      \n  };\n\nexport const postRequest = (funko: Funko, callback: (\n  err:ResponseType | undefined, data: ResponseType | undefined) => void ) => {\n    const ids = getIds(`./database/${funko._owner}`);\n    if (checkUserDirSync(funko._owner, './database')) {\n      if(!funko._id || !funko._name || !funko._description || !funko._type || !funko._especialCaracteristics ||!funko._exclusive || !funko._franchise || !funko._franchise_number || !funko._genre || !funko._type ) {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'No se ha especificado alguno de los parametros del funko',\n        };\n        callback(error_, undefined);\n        return;\n      }\n      if (checkIds(ids, funko._id)) {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'El id ya existe',\n        };\n        callback(error_, undefined);\n      } else {\n        createJsonFunkoFile(funko._owner, funko);\n        const response: ResponseType = {\n          type: 'add',\n          success: true,\n          message: 'Funko creado',\n        };\n        callback(undefined, response);\n      }\n    } else {\n      const error_: ResponseType = {\n        type: 'error',\n        success: false,\n        message: 'El usuario no existe',\n      };\n      callback(error_, undefined);\n    }\n  };\n\nexport const deleteRequest = (funko: Funko, callback: (\n  err:ResponseType | undefined, data: ResponseType | undefined) => void ) => {\n    if (checkUserDirSync(funko._owner, './database')) {\n      if(!funko._id) {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'No se ha especificado el id',\n        };\n        callback(error_, undefined);\n        return;\n      } \n      //console.log(removeFunko('./database', funko._owner, funko._id))\n      if(removeFunko('./database', funko._owner, funko._id)) {\n        const response: ResponseType = {\n          type: 'remove',\n          success: true,\n          message: 'Funko eliminado',\n        };\n        callback(undefined, response);\n      } else {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'El id no existe y por ello no se puede eliminar el funko',\n        };\n        callback(error_, undefined);\n      }\n    } else {\n      const error_: ResponseType = {\n        type: 'error',\n        success: false,\n        message: 'El usuario no existe',\n      };\n      callback(error_, undefined);\n    }      \n  };\n\nexport const patchRequest = (funko: Funko, callback: (\n  err:ResponseType | undefined, data: ResponseType | undefined) => void ) => {\n    if (checkUserDirSync(funko._owner, './database')) {\n      if(!funko._id) {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'No se ha especificado el id',\n        };\n        callback(error_, undefined);\n        return;\n      } \n      const ids = getIds(`./database/${funko._owner}`);\n      //console.log(ids)\n      //console.log(funko._id)\n      if(checkIds(ids, funko._id)) {\n        removeFunko('./database', funko._owner, funko._id);\n        createJsonFunkoFile(funko._owner, funko);\n        const response: ResponseType = {\n          type: 'update',\n          success: true,\n          message: 'Funko actualizado',\n        };\n        callback(undefined, response);\n      } else {\n        const error_: ResponseType = {\n          type: 'error',\n          success: false,\n          message: 'El id no existe',\n        };\n        callback(error_, undefined);\n      }\n    } else {\n      const error_: ResponseType = {\n        type: 'error',\n        success: false,\n        message: 'El usuario no existe',\n      };\n      callback(error_, undefined);\n    }      \n  };"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bf3a853401b780a64198caffd012c647c3d1e271","contentHash":"3550e5b17128ca083e3d6d9d5cf79ec1aaddb3c25ed76c02cb80067f75a944c6"},"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":127}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":44}},"4":{"start":{"line":13,"column":4},"end":{"line":20,"column":7}},"5":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"6":{"start":{"line":15,"column":12},"end":{"line":15,"column":28}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":27}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"9":{"start":{"line":29,"column":20},"end":{"line":29,"column":37}},"10":{"start":{"line":30,"column":18},"end":{"line":30,"column":82}},"11":{"start":{"line":30,"column":59},"end":{"line":30,"column":81}},"12":{"start":{"line":31,"column":19},"end":{"line":31,"column":21}},"13":{"start":{"line":32,"column":4},"end":{"line":36,"column":7}},"14":{"start":{"line":33,"column":21},"end":{"line":33,"column":67}},"15":{"start":{"line":34,"column":25},"end":{"line":34,"column":41}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":30}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":18}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":30}},"19":{"start":{"line":47,"column":20},"end":{"line":47,"column":37}},"20":{"start":{"line":48,"column":16},"end":{"line":51,"column":5}},"21":{"start":{"line":52,"column":18},"end":{"line":52,"column":82}},"22":{"start":{"line":52,"column":59},"end":{"line":52,"column":81}},"23":{"start":{"line":53,"column":4},"end":{"line":59,"column":7}},"24":{"start":{"line":54,"column":21},"end":{"line":54,"column":67}},"25":{"start":{"line":55,"column":25},"end":{"line":55,"column":41}},"26":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"27":{"start":{"line":57,"column":12},"end":{"line":57,"column":29}},"28":{"start":{"line":60,"column":4},"end":{"line":60,"column":17}},"29":{"start":{"line":62,"column":0},"end":{"line":62,"column":38}},"30":{"start":{"line":69,"column":22},"end":{"line":69,"column":43}},"31":{"start":{"line":71,"column":20},"end":{"line":71,"column":60}},"32":{"start":{"line":72,"column":4},"end":{"line":72,"column":41}},"33":{"start":{"line":74,"column":0},"end":{"line":74,"column":50}},"34":{"start":{"line":83,"column":20},"end":{"line":83,"column":37}},"35":{"start":{"line":84,"column":16},"end":{"line":84,"column":49}},"36":{"start":{"line":85,"column":4},"end":{"line":102,"column":5}},"37":{"start":{"line":86,"column":22},"end":{"line":86,"column":86}},"38":{"start":{"line":86,"column":63},"end":{"line":86,"column":85}},"39":{"start":{"line":87,"column":8},"end":{"line":96,"column":11}},"40":{"start":{"line":88,"column":25},"end":{"line":88,"column":71}},"41":{"start":{"line":89,"column":29},"end":{"line":89,"column":45}},"42":{"start":{"line":90,"column":12},"end":{"line":95,"column":13}},"43":{"start":{"line":92,"column":41},"end":{"line":92,"column":61}},"44":{"start":{"line":94,"column":16},"end":{"line":94,"column":48}},"45":{"start":{"line":98,"column":8},"end":{"line":98,"column":20}},"46":{"start":{"line":101,"column":8},"end":{"line":101,"column":21}},"47":{"start":{"line":104,"column":0},"end":{"line":104,"column":34}}},"fnMap":{"0":{"name":"userExistOnBD","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":22}},"loc":{"start":{"line":12,"column":43},"end":{"line":21,"column":1}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":43},"end":{"line":13,"column":44}},"loc":{"start":{"line":13,"column":52},"end":{"line":20,"column":5}},"line":13},"2":{"name":"listFunko","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":18}},"loc":{"start":{"line":28,"column":31},"end":{"line":38,"column":1}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":49},"end":{"line":30,"column":50}},"loc":{"start":{"line":30,"column":59},"end":{"line":30,"column":81}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":18},"end":{"line":32,"column":19}},"loc":{"start":{"line":32,"column":28},"end":{"line":36,"column":5}},"line":32},"5":{"name":"findFunkoByID","decl":{"start":{"line":46,"column":9},"end":{"line":46,"column":22}},"loc":{"start":{"line":46,"column":39},"end":{"line":61,"column":1}},"line":46},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":49},"end":{"line":52,"column":50}},"loc":{"start":{"line":52,"column":59},"end":{"line":52,"column":81}},"line":52},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":18},"end":{"line":53,"column":19}},"loc":{"start":{"line":53,"column":28},"end":{"line":59,"column":5}},"line":53},"8":{"name":"createJsonFunkoFile","decl":{"start":{"line":68,"column":9},"end":{"line":68,"column":28}},"loc":{"start":{"line":68,"column":42},"end":{"line":73,"column":1}},"line":68},"9":{"name":"removeFunko","decl":{"start":{"line":82,"column":9},"end":{"line":82,"column":20}},"loc":{"start":{"line":82,"column":37},"end":{"line":103,"column":1}},"line":82},"10":{"name":"(anonymous_10)","decl":{"start":{"line":86,"column":53},"end":{"line":86,"column":54}},"loc":{"start":{"line":86,"column":63},"end":{"line":86,"column":85}},"line":86},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":22},"end":{"line":87,"column":23}},"loc":{"start":{"line":87,"column":32},"end":{"line":96,"column":9}},"line":87}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},{"start":{"line":14,"column":8},"end":{"line":19,"column":9}}],"line":14},"1":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"2":{"loc":{"start":{"line":85,"column":4},"end":{"line":102,"column":5}},"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":102,"column":5}},{"start":{"line":85,"column":4},"end":{"line":102,"column":5}}],"line":85},"3":{"loc":{"start":{"line":90,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":95,"column":13}},{"start":{"line":90,"column":12},"end":{"line":95,"column":13}}],"line":90}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":2,"12":1,"13":1,"14":2,"15":2,"16":2,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":1,"35":1,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1},"f":{"0":0,"1":0,"2":1,"3":2,"4":2,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0,1],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport { Funko } from './funkoInterface';\nimport {getIds, checkIds} from './utilities2'\n\n/**\n * @description Función que comprueba si un usuario existe en la base de datos\n * @description Haciendo uso de lo aprendido en el ejercicio 1 de esta práctica\n * @param filePath \n * @param callback \n */\nexport function userExistOnBD(filePath: string, callback: (exists: boolean) => void): void {\n  fs.access(filePath, fs.constants.F_OK, (err) => {\n  if (err) {\n    callback(false);\n  } else {\n    callback(true);\n  }\n  });\n}\n\n/**\n * Función que lista los funkos de un usuario\n * @param path -- Path donde se va a crear el funko\n * @param user -- Usuario que crea el funko\n */\nexport function listFunko(path: string, user: string): Funko[] {\n  const newPath = `${path}/${user}`;\n  const files = fs.readdirSync(newPath).filter((file) => file.endsWith('.json'));\n\n  const funkos: Funko[] = [];\n  files.forEach((file) => {\n    const data = fs.readFileSync(`${newPath}/${file}`, 'utf-8');\n    const jsonData = JSON.parse(data);\n    funkos.push(jsonData);\n  });\n  return funkos;\n}\n\n/**\n * @description Función que busca un funko por su id\n * @param path -- Path donde se va a crear el funko\n * @param user -- Usuario que crea el funko\n * @param id -- Id del funko\n */\nexport function findFunkoByID(path: string, user: string, id: string): Funko {\n  const newPath = `${path}/${user}`;\n  let funko: Funko = {\n    _owner: user,\n    _description: 'Se ha decidido buscar un funko por su id',\n  }\n\n  const files = fs.readdirSync(newPath).filter((file) => file.endsWith('.json'));\n    files.forEach((file) => {\n      const data = fs.readFileSync(`${newPath}/${file}`, 'utf-8');\n      const jsonData = JSON.parse(data);\n\n      if (jsonData.id === id) {\n        funko = jsonData;\n      }\n  });\n  return funko;\n}\n\n/**\n * @description Función que genera un fichero JSON con la información del funko\n * @param funko \n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createJsonFunkoFile(user:string, funko: Funko): void {\n  const datosJSON = JSON.stringify(funko);\n  // creamos el path donde se va a crear el fichero con el nombre del funko y extension .json\n  const newPath = `./database/${user}/${funko._name}.json`; \n\n  fs.writeFileSync(newPath, datosJSON);\n}\n\n/**\n * @description Función que borra un funko por su id\n * @param path -- Path donde se va a crear el funko\n * @param user -- Usuario que crea el funko\n * @param id -- Id del funko\n * \n */\nexport function removeFunko(path: string, user: string, id: string): boolean{\n  const newPath = `${path}/${user}`;\n  const ids = getIds(newPath);\n\n  if (checkIds(ids, id)) {\n    const files = fs.readdirSync(newPath).filter((file) => file.endsWith('.json'));\n    files.forEach((file) => {\n      const data = fs.readFileSync(`${newPath}/${file}`, 'utf-8');\n      const jsonData = JSON.parse(data);\n\n      if (jsonData._id == id) {\n        // console.log(\"Entra aqui\")\n        const newpath_and_file = `${newPath}/${file}`;\n        //console.log(\"borra\")\n        fs.unlinkSync(newpath_and_file);\n      }\n    });\n    // console.log(\"Funko eliminado correctamente\");\n    return true;\n  } else {\n    return false;\n  }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9120bea09823c2f9aa097575e7c3ed46be9ae16e","contentHash":"bac0b4002e42000002e3adf72764e2ea63b7d944776da81afa27bd8acd7da72b"},"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities2.ts":{"path":"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities2.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":94}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":10,"column":18},"end":{"line":10,"column":79}},"4":{"start":{"line":10,"column":56},"end":{"line":10,"column":78}},"5":{"start":{"line":11,"column":16},"end":{"line":11,"column":18}},"6":{"start":{"line":12,"column":4},"end":{"line":17,"column":7}},"7":{"start":{"line":13,"column":24},"end":{"line":13,"column":58}},"8":{"start":{"line":14,"column":26},"end":{"line":14,"column":56}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":32}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":15}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}},"12":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":20}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":17}},"15":{"start":{"line":32,"column":0},"end":{"line":32,"column":38}},"16":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"17":{"start":{"line":37,"column":17},"end":{"line":37,"column":18}},"18":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"19":{"start":{"line":40,"column":12},"end":{"line":40,"column":24}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":17}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":28}},"22":{"start":{"line":54,"column":28},"end":{"line":54,"column":48}},"23":{"start":{"line":57,"column":21},"end":{"line":57,"column":116}},"24":{"start":{"line":57,"column":51},"end":{"line":57,"column":115}},"25":{"start":{"line":58,"column":4},"end":{"line":58,"column":20}},"26":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}}},"fnMap":{"0":{"name":"getIds","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":15}},"loc":{"start":{"line":9,"column":22},"end":{"line":20,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":46},"end":{"line":10,"column":47}},"loc":{"start":{"line":10,"column":56},"end":{"line":10,"column":78}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":18},"end":{"line":12,"column":19}},"loc":{"start":{"line":12,"column":28},"end":{"line":17,"column":5}},"line":12},"3":{"name":"checkValidCmd","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":22}},"loc":{"start":{"line":26,"column":28},"end":{"line":31,"column":1}},"line":26},"4":{"name":"checkIds","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":17}},"loc":{"start":{"line":36,"column":27},"end":{"line":44,"column":1}},"line":36},"5":{"name":"checkUserDirSync","decl":{"start":{"line":51,"column":9},"end":{"line":51,"column":25}},"loc":{"start":{"line":51,"column":42},"end":{"line":59,"column":1}},"line":51},"6":{"name":"(anonymous_6)","decl":{"start":{"line":57,"column":42},"end":{"line":57,"column":43}},"loc":{"start":{"line":57,"column":51},"end":{"line":57,"column":115}},"line":57}},"branchMap":{"0":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"1":{"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":78}},"type":"binary-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":21}},{"start":{"line":27,"column":25},"end":{"line":27,"column":39}},{"start":{"line":27,"column":43},"end":{"line":27,"column":59}},{"start":{"line":27,"column":63},"end":{"line":27,"column":78}}],"line":27},"2":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"3":{"loc":{"start":{"line":57,"column":51},"end":{"line":57,"column":115}},"type":"binary-expr","locations":[{"start":{"line":57,"column":51},"end":{"line":57,"column":67}},{"start":{"line":57,"column":71},"end":{"line":57,"column":115}}],"line":57}},"s":{"0":1,"1":1,"2":1,"3":7,"4":14,"5":7,"6":7,"7":14,"8":14,"9":14,"10":7,"11":1,"12":8,"13":4,"14":4,"15":1,"16":5,"17":5,"18":10,"19":1,"20":4,"21":1,"22":12,"23":12,"24":32,"25":12,"26":1},"f":{"0":7,"1":14,"2":14,"3":8,"4":5,"5":12,"6":32},"b":{"0":[4,4],"1":[8,7,6,5],"2":[1,9],"3":[32,7]},"inputSourceMap":{"version":3,"file":"/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities2.ts","sources":["/home/usuario/ull-esit-inf-dsi-22-23-prct11-http-express-funko-app-Adrian-glz01/src/Funko/utilities2.ts"],"names":[],"mappings":";;;AAAA,yBAAyB;AAEzB;;;GAGG;AACH,SAAgB,MAAM,CAAC,IAAW;IAChC,MAAM,KAAK,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,mFAAmF;IAChK,MAAM,GAAG,GAAa,EAAE,CAAC,CAAC,8DAA8D;IAExF,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;QACrB,MAAM,OAAO,GAAG,EAAE,CAAC,YAAY,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC;QACnD,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjD,6BAA6B;QAC7B,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,oBAAoB;IACpB,OAAO,GAAG,CAAC;AACb,CAAC;AAbD,wBAaC;AAED;;;GAGG;AACH,SAAgB,aAAa,CAAC,GAAW;IACvC,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,OAAO,EAAE;QAC1E,OAAO,IAAI,CAAC;KACb;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AALD,sCAKC;AAED;;GAEG;AACH,SAAgB,QAAQ,CAAC,GAAa,EAAE,EAAU;IAChD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,iCAAiC;QACjC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;YAChB,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AARD,4BAQC;AAED;;;;GAIG;AACH,SAAgB,gBAAgB,CAAC,QAAgB,EAAE,IAAY;IAC7D,iFAAiF;IACjF,qGAAqG;IACrG,MAAM,eAAe,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAE7C,+DAA+D;IAC/D,gIAAgI;IAChI,MAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,QAAQ,IAAI,EAAE,CAAC,SAAS,CAAC,GAAG,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAA;IAEhH,OAAO,QAAQ,CAAC;AAClB,CAAC;AAVD,4CAUC","sourcesContent":["import * as fs from 'fs';\n\n/**\n * @description Función que comprueba si el id del funko es unico\n * @param path -- Path donde se va a crear el funko\n */\nexport function getIds(path:string): string[] {\n  const files = fs.readdirSync(path).filter((file) => file.endsWith('.json')); // nos aseguramos que los ficheros leidos son solo los .json, para curarme en salud\n  const ids: string[] = []; // array donde almacenaremos los ids de los funkos del usuario\n\n  files.forEach((file) => {\n    const content = fs.readFileSync(`${path}/${file}`);\n    const funkoData = JSON.parse(content.toString());\n    // console.log(funkoData.id);\n    ids.push(funkoData._id);\n  });\n\n  // console.log(ids);\n  return ids;\n}\n\n/**\n * @description Función que comprueba si el id del funko es unico\n * @param path -- Path donde se va a crear el funko\n */\nexport function checkValidCmd(cmd: string): boolean {\n  if (cmd === 'get' || cmd === 'post' || cmd === 'delete' || cmd === 'patch') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @description Función que comprueba si el id del funko existe en el array de ids\n */\nexport function checkIds(ids: string[], id: string): boolean {\n  for (let i = 0; i < ids.length; i++) {\n    //console.log( ids[i] + \" \" + id)\n    if (ids[i] == id) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @Description Funcion que verifica si existe un directorio con el nombre del usuario en la base de datos\n * @param userNAme -- Nombre del usuario\n * @param path -- Path donde se va a buscar el directorio\n */\nexport function checkUserDirSync(userName: string, path: string) : boolean {\n  // Leemos el directorio y almacenamos en una variable los archivos dentro de ella\n  //? Tener en cuenta que pueden ser carpetas o archivos, para no olvidarme de manejar esto despues... \n  const pathDirectories = fs.readdirSync(path); \n\n  // variable booleana para retornar si existe o no el directorio\n  //? lstatSync Mediante esta funcion podemos saber si es un directorio o un archivo, en caso de ser un archivo se retornara false\n  const existDir = pathDirectories.some((dir) => dir === userName && fs.lstatSync(`${path}/${dir}`).isDirectory()) \n\n  return existDir;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d0e97d8d1c3b50165e6eb514a343a40620ab544c","contentHash":"4cbe94bf2707eebd83100e8a7dfc1c9ca4e8baf7a9fe2e78bd5a6596e9c69fa0"}}